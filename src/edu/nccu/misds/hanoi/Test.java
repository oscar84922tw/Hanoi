package edu.nccu.misds.hanoi;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;

public class Test {
	public static void main(String[] args) throws IOException {
		 System.out.println(testPrintStack());
		 System.out.println(testHonaiTowerRefresh());
		 System.out.println(testHonaiTowerGetTimes());
	     HonaiTower h = new HonaiTower(11);
		 h.start();
	}

	

	public static boolean testPrintStack() {
		PrintStream tmp = System.out;
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		PrintStream ps = new PrintStream(baos);
		String out = "";
		try {
			System.setOut(ps);
			MyStack<Integer> a = new MyStack<Integer>();
			a.push(5);
			a.push(4);
			a.push(3);
			a.push(2);
			a.push(1);
			a.pop();
			a.printStack();
			System.out.flush();
			out = baos.toString();
		} finally {
			System.setOut(tmp);
			ps.close();
		}
		return "|-5 4 3 2".equals(out.trim());
	}
	
	private static boolean testHonaiTowerGetTimes() {
		PrintStream tmp = System.out;
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		PrintStream ps = new PrintStream(baos);

		HonaiTower h1 = new HonaiTower(5);
		try {
			// be quite!
			System.setOut(ps);
			h1.start();
		} finally {
			System.setOut(tmp);
			ps.close();
		}
		return h1.getTimes() == 31;
	}

	public static boolean testHonaiTowerConstructor() {
		PrintStream tmp = System.out;
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		PrintStream ps = new PrintStream(baos);
		String out = "";
		try {
			System.setOut(ps);
			HonaiTower a = new HonaiTower(5);
			a.printHonaiTower();
			System.out.flush();
			out = baos.toString();
			out = out.replace(System.getProperty("line.separator"), "");
		} finally {
			System.setOut(tmp);
			ps.close();
		}
		return "Current state: 0|-5 4 3 2 1|-|---------------".equals(out
				.trim());
	}

	public static boolean testHonaiTowerRefresh() {
		boolean result = false;
		try {
			HonaiTower a = new HonaiTower(5);
			a.setNumOfDisks(9);
			a.setTimes(19);
			a.getRodA().push(2);
			a.getRodB().push(4);
			a.getRodC().push(5);
			a.refresh(13);
			result = a.getNumOfDisks() == 13 && a.getTimes() == 0
					&& a.getRodA().size() == 13 && a.getRodB().size() == 0
					&& a.getRodC().size() == 0;
		} finally {
		}
		return result;
	}


//	public static void check1(int key) {
//		int[] encode = { 192, 177, 179, 187, 177, 183, 181, 112, 181, 180, 197,
//				126, 190, 179, 179, 197, 126, 189, 185, 195, 180, 195, 126,
//				184, 177, 190, 191, 185, 139, 112, 112, 185, 189, 192, 191,
//				194, 196, 112, 186, 177, 198, 177, 126, 197, 196, 185, 188,
//				126, 145, 194, 194, 177, 201, 156, 185, 195, 196, 139, 112,
//				185, 189, 192, 191, 194, 196, 112, 186, 177, 198, 177, 126,
//				197, 196, 185, 188, 126, 156, 185, 195, 196, 139, 112, 112,
//				192, 197, 178, 188, 185, 179, 112, 179, 188, 177, 195, 195,
//				112, 157, 201, 163, 196, 177, 179, 187, 145, 190, 195, 199,
//				181, 194, 140, 164, 142, 112, 203, 112, 89, 192, 194, 185, 198,
//				177, 196, 181, 112, 156, 185, 195, 196, 140, 164, 142, 112,
//				185, 190, 190, 181, 194, 112, 141, 112, 190, 181, 199, 112,
//				145, 194, 194, 177, 201, 156, 185, 195, 196, 140, 164, 142,
//				120, 121, 139, 112, 112, 89, 192, 197, 178, 188, 185, 179, 112,
//				198, 191, 185, 180, 112, 192, 197, 195, 184, 120, 164, 112,
//				181, 121, 112, 203, 112, 89, 89, 185, 190, 190, 181, 194, 126,
//				177, 180, 180, 120, 181, 121, 139, 112, 89, 205, 112, 112, 89,
//				192, 197, 178, 188, 185, 179, 112, 164, 112, 192, 191, 192,
//				120, 121, 112, 203, 112, 89, 89, 194, 181, 196, 197, 194, 190,
//				112, 185, 190, 190, 181, 194, 126, 194, 181, 189, 191, 198,
//				181, 120, 185, 190, 190, 181, 194, 126, 195, 185, 202, 181,
//				120, 121, 112, 125, 112, 129, 121, 139, 112, 89, 205, 112, 112,
//				89, 192, 197, 178, 188, 185, 179, 112, 164, 112, 196, 191, 192,
//				120, 121, 112, 203, 112, 89, 89, 194, 181, 196, 197, 194, 190,
//				112, 185, 190, 190, 181, 194, 126, 183, 181, 196, 120, 185,
//				190, 190, 181, 194, 126, 195, 185, 202, 181, 120, 121, 112,
//				125, 112, 129, 121, 139, 112, 89, 205, 112, 112, 89, 192, 197,
//				178, 188, 185, 179, 112, 198, 191, 185, 180, 112, 192, 194,
//				185, 190, 196, 163, 196, 177, 179, 187, 120, 121, 203, 112, 89,
//				89, 163, 196, 194, 185, 190, 183, 146, 197, 185, 188, 180, 181,
//				194, 112, 195, 178, 112, 141, 112, 190, 181, 199, 112, 163,
//				196, 194, 185, 190, 183, 146, 197, 185, 188, 180, 181, 194,
//				120, 114, 204, 125, 114, 121, 139, 112, 89, 89, 182, 191, 194,
//				120, 164, 112, 181, 188, 181, 138, 112, 185, 190, 190, 181,
//				194, 121, 203, 112, 89, 89, 89, 195, 178, 126, 177, 192, 192,
//				181, 190, 180, 120, 181, 188, 181, 121, 126, 177, 192, 192,
//				181, 190, 180, 120, 114, 112, 114, 121, 139, 112, 89, 89, 205,
//				112, 89, 89, 163, 201, 195, 196, 181, 189, 126, 191, 197, 196,
//				126, 192, 194, 185, 190, 196, 188, 190, 120, 195, 178, 126,
//				196, 191, 163, 196, 194, 185, 190, 183, 120, 121, 126, 196,
//				194, 185, 189, 120, 121, 121, 139, 112, 89, 205, 112, 89, 112,
//				89, 192, 197, 178, 188, 185, 179, 112, 185, 190, 196, 112, 195,
//				185, 202, 181, 120, 121, 203, 112, 89, 89, 194, 181, 196, 197,
//				194, 190, 112, 185, 190, 190, 181, 194, 126, 195, 185, 202,
//				181, 120, 121, 139, 112, 89, 205, 112, 205, 112 };
//		char[] codeArr = new char[encode.length];
//		for (int i = 0; i < encode.length; i++) {
//			codeArr[i] = (char) (encode[i] - key);
//		}
//		String code = new String(codeArr);
//		System.out.println(code);
//	}
//
//	public static void check2(int key) {
//		int[] encode = { 172, 157, 159, 167, 157, 163, 161, 92, 161, 160, 177,
//				106, 170, 159, 159, 177, 106, 169, 165, 175, 160, 175, 106,
//				164, 157, 170, 171, 165, 119, 92, 92, 172, 177, 158, 168, 165,
//				159, 92, 159, 168, 157, 175, 175, 92, 132, 171, 170, 157, 165,
//				144, 171, 179, 161, 174, 125, 170, 175, 179, 161, 174, 92, 183,
//				92, 69, 172, 174, 165, 178, 157, 176, 161, 92, 137, 181, 143,
//				176, 157, 159, 167, 120, 133, 170, 176, 161, 163, 161, 174,
//				122, 92, 174, 171, 160, 125, 119, 92, 69, 172, 174, 165, 178,
//				157, 176, 161, 92, 137, 181, 143, 176, 157, 159, 167, 120, 133,
//				170, 176, 161, 163, 161, 174, 122, 92, 174, 171, 160, 126, 119,
//				92, 69, 172, 174, 165, 178, 157, 176, 161, 92, 137, 181, 143,
//				176, 157, 159, 167, 120, 133, 170, 176, 161, 163, 161, 174,
//				122, 92, 174, 171, 160, 127, 119, 92, 69, 172, 174, 165, 178,
//				157, 176, 161, 92, 165, 170, 176, 92, 176, 165, 169, 161, 175,
//				92, 121, 92, 108, 119, 92, 69, 172, 174, 165, 178, 157, 176,
//				161, 92, 165, 170, 176, 92, 170, 177, 169, 139, 162, 128, 165,
//				175, 167, 175, 92, 121, 92, 108, 119, 92, 92, 69, 172, 177,
//				158, 168, 165, 159, 92, 132, 171, 170, 157, 165, 144, 171, 179,
//				161, 174, 125, 170, 175, 179, 161, 174, 100, 165, 170, 176, 92,
//				170, 177, 169, 139, 162, 128, 165, 175, 167, 175, 101, 92, 183,
//				92, 69, 69, 174, 161, 162, 174, 161, 175, 164, 100, 170, 177,
//				169, 139, 162, 128, 165, 175, 167, 175, 101, 119, 92, 69, 185,
//				92, 92, 69, 172, 177, 158, 168, 165, 159, 92, 178, 171, 165,
//				160, 92, 174, 161, 162, 174, 161, 175, 164, 100, 165, 170, 176,
//				92, 170, 177, 169, 139, 162, 128, 165, 175, 167, 175, 101, 92,
//				183, 92, 69, 69, 176, 164, 165, 175, 106, 170, 177, 169, 139,
//				162, 128, 165, 175, 167, 175, 92, 121, 92, 170, 177, 169, 139,
//				162, 128, 165, 175, 167, 175, 119, 92, 69, 69, 176, 164, 165,
//				175, 106, 176, 165, 169, 161, 175, 92, 121, 92, 108, 119, 92,
//				69, 69, 174, 171, 160, 125, 92, 121, 92, 170, 161, 179, 92,
//				137, 181, 143, 176, 157, 159, 167, 120, 133, 170, 176, 161,
//				163, 161, 174, 122, 100, 101, 119, 92, 69, 69, 174, 171, 160,
//				126, 92, 121, 92, 170, 161, 179, 92, 137, 181, 143, 176, 157,
//				159, 167, 120, 133, 170, 176, 161, 163, 161, 174, 122, 100,
//				101, 119, 92, 69, 69, 174, 171, 160, 127, 92, 121, 92, 170,
//				161, 179, 92, 137, 181, 143, 176, 157, 159, 167, 120, 133, 170,
//				176, 161, 163, 161, 174, 122, 100, 101, 119, 92, 69, 69, 162,
//				171, 174, 92, 100, 165, 170, 176, 92, 165, 92, 121, 92, 170,
//				177, 169, 139, 162, 128, 165, 175, 167, 175, 119, 92, 165, 92,
//				122, 92, 108, 119, 92, 165, 105, 105, 101, 92, 183, 92, 69, 69,
//				69, 174, 171, 160, 125, 106, 172, 177, 175, 164, 100, 165, 101,
//				119, 92, 69, 69, 185, 92, 69, 185, 92, 69, 92, 69, 172, 177,
//				158, 168, 165, 159, 92, 178, 171, 165, 160, 92, 175, 176, 157,
//				174, 176, 100, 101, 183, 92, 69, 69, 161, 180, 161, 159, 177,
//				176, 161, 100, 176, 164, 165, 175, 106, 170, 177, 169, 139,
//				162, 128, 165, 175, 167, 175, 104, 92, 174, 171, 160, 125, 104,
//				92, 174, 171, 160, 126, 104, 92, 174, 171, 160, 127, 101, 119,
//				92, 69, 185, 92, 92, 69, 172, 174, 165, 178, 157, 176, 161, 92,
//				178, 171, 165, 160, 92, 161, 180, 161, 159, 177, 176, 161, 100,
//				165, 170, 176, 92, 170, 104, 92, 137, 181, 143, 176, 157, 159,
//				167, 120, 133, 170, 176, 161, 163, 161, 174, 122, 92, 175, 174,
//				159, 104, 92, 137, 181, 143, 176, 157, 159, 167, 120, 133, 170,
//				176, 161, 163, 161, 174, 122, 92, 160, 161, 175, 176, 104, 92,
//				69, 69, 69, 137, 181, 143, 176, 157, 159, 167, 120, 133, 170,
//				176, 161, 163, 161, 174, 122, 92, 175, 172, 157, 174, 161, 101,
//				92, 183, 92, 69, 69, 165, 162, 100, 170, 92, 122, 92, 108, 101,
//				183, 92, 69, 69, 69, 161, 180, 161, 159, 177, 176, 161, 100,
//				170, 105, 109, 104, 92, 175, 174, 159, 104, 92, 175, 172, 157,
//				174, 161, 104, 92, 160, 161, 175, 176, 101, 119, 92, 69, 69,
//				69, 176, 164, 165, 175, 106, 176, 165, 169, 161, 175, 103, 121,
//				109, 119, 92, 69, 69, 69, 133, 170, 176, 161, 163, 161, 174,
//				92, 157, 92, 121, 92, 175, 174, 159, 106, 172, 171, 172, 100,
//				101, 119, 92, 69, 69, 69, 175, 172, 157, 174, 161, 106, 172,
//				177, 175, 164, 100, 157, 101, 119, 92, 69, 69, 69, 172, 174,
//				165, 170, 176, 132, 171, 170, 157, 165, 144, 171, 179, 161,
//				174, 100, 101, 119, 92, 69, 69, 69, 161, 180, 161, 159, 177,
//				176, 161, 100, 170, 105, 109, 104, 92, 160, 161, 175, 176, 104,
//				92, 175, 174, 159, 104, 92, 175, 172, 157, 174, 161, 101, 119,
//				92, 92, 92, 69, 69, 185, 92, 69, 185, 92, 69, 92, 69, 172, 177,
//				158, 168, 165, 159, 92, 165, 170, 176, 92, 163, 161, 176, 144,
//				165, 169, 161, 175, 100, 101, 92, 183, 92, 69, 69, 174, 161,
//				176, 177, 174, 170, 92, 176, 165, 169, 161, 175, 119, 92, 69,
//				185, 92, 92, 69, 172, 177, 158, 168, 165, 159, 92, 178, 171,
//				165, 160, 92, 172, 174, 165, 170, 176, 132, 171, 170, 157, 165,
//				144, 171, 179, 161, 174, 100, 101, 92, 183, 92, 69, 69, 143,
//				181, 175, 176, 161, 169, 106, 171, 177, 176, 106, 172, 174,
//				165, 170, 176, 168, 170, 100, 94, 127, 177, 174, 174, 161, 170,
//				176, 92, 175, 176, 157, 176, 161, 118, 92, 94, 103, 176, 164,
//				165, 175, 106, 176, 165, 169, 161, 175, 101, 119, 92, 69, 69,
//				174, 171, 160, 125, 106, 172, 174, 165, 170, 176, 143, 176,
//				157, 159, 167, 100, 101, 119, 92, 69, 69, 174, 171, 160, 126,
//				106, 172, 174, 165, 170, 176, 143, 176, 157, 159, 167, 100,
//				101, 119, 92, 69, 69, 174, 171, 160, 127, 106, 172, 174, 165,
//				170, 176, 143, 176, 157, 159, 167, 100, 101, 119, 92, 69, 69,
//				143, 181, 175, 176, 161, 169, 106, 171, 177, 176, 106, 172,
//				174, 165, 170, 176, 168, 170, 100, 94, 105, 105, 105, 105, 105,
//				105, 105, 105, 105, 105, 105, 105, 105, 105, 94, 101, 119, 92,
//				69, 185, 92, 69, 92, 69, 172, 177, 158, 168, 165, 159, 92, 137,
//				181, 143, 176, 157, 159, 167, 120, 133, 170, 176, 161, 163,
//				161, 174, 122, 92, 163, 161, 176, 142, 171, 160, 125, 100, 101,
//				92, 183, 92, 69, 69, 174, 161, 176, 177, 174, 170, 92, 174,
//				171, 160, 125, 119, 92, 69, 185, 92, 92, 69, 172, 177, 158,
//				168, 165, 159, 92, 178, 171, 165, 160, 92, 175, 161, 176, 142,
//				171, 160, 125, 100, 137, 181, 143, 176, 157, 159, 167, 120,
//				133, 170, 176, 161, 163, 161, 174, 122, 92, 174, 171, 160, 125,
//				101, 92, 183, 92, 69, 69, 176, 164, 165, 175, 106, 174, 171,
//				160, 125, 92, 121, 92, 174, 171, 160, 125, 119, 92, 69, 185,
//				92, 92, 69, 172, 177, 158, 168, 165, 159, 92, 137, 181, 143,
//				176, 157, 159, 167, 120, 133, 170, 176, 161, 163, 161, 174,
//				122, 92, 163, 161, 176, 142, 171, 160, 126, 100, 101, 92, 183,
//				92, 69, 69, 174, 161, 176, 177, 174, 170, 92, 174, 171, 160,
//				126, 119, 92, 69, 185, 92, 92, 69, 172, 177, 158, 168, 165,
//				159, 92, 178, 171, 165, 160, 92, 175, 161, 176, 142, 171, 160,
//				126, 100, 137, 181, 143, 176, 157, 159, 167, 120, 133, 170,
//				176, 161, 163, 161, 174, 122, 92, 174, 171, 160, 126, 101, 92,
//				183, 92, 69, 69, 176, 164, 165, 175, 106, 174, 171, 160, 126,
//				92, 121, 92, 174, 171, 160, 126, 119, 92, 69, 185, 92, 92, 69,
//				172, 177, 158, 168, 165, 159, 92, 137, 181, 143, 176, 157, 159,
//				167, 120, 133, 170, 176, 161, 163, 161, 174, 122, 92, 163, 161,
//				176, 142, 171, 160, 127, 100, 101, 92, 183, 92, 69, 69, 174,
//				161, 176, 177, 174, 170, 92, 174, 171, 160, 127, 119, 92, 69,
//				185, 92, 92, 69, 172, 177, 158, 168, 165, 159, 92, 178, 171,
//				165, 160, 92, 175, 161, 176, 142, 171, 160, 127, 100, 137, 181,
//				143, 176, 157, 159, 167, 120, 133, 170, 176, 161, 163, 161,
//				174, 122, 92, 174, 171, 160, 127, 101, 92, 183, 92, 69, 69,
//				176, 164, 165, 175, 106, 174, 171, 160, 127, 92, 121, 92, 174,
//				171, 160, 127, 119, 92, 69, 185, 92, 92, 69, 172, 177, 158,
//				168, 165, 159, 92, 178, 171, 165, 160, 92, 175, 161, 176, 144,
//				165, 169, 161, 175, 100, 165, 170, 176, 92, 176, 165, 169, 161,
//				175, 101, 92, 183, 92, 69, 69, 176, 164, 165, 175, 106, 176,
//				165, 169, 161, 175, 92, 121, 92, 176, 165, 169, 161, 175, 119,
//				92, 69, 185, 92, 92, 69, 172, 177, 158, 168, 165, 159, 92, 165,
//				170, 176, 92, 163, 161, 176, 138, 177, 169, 139, 162, 128, 165,
//				175, 167, 175, 100, 101, 92, 183, 92, 69, 69, 174, 161, 176,
//				177, 174, 170, 92, 170, 177, 169, 139, 162, 128, 165, 175, 167,
//				175, 119, 92, 69, 185, 92, 92, 69, 172, 177, 158, 168, 165,
//				159, 92, 178, 171, 165, 160, 92, 175, 161, 176, 138, 177, 169,
//				139, 162, 128, 165, 175, 167, 175, 100, 165, 170, 176, 92, 170,
//				177, 169, 139, 162, 128, 165, 175, 167, 175, 101, 92, 183, 92,
//				69, 69, 176, 164, 165, 175, 106, 170, 177, 169, 139, 162, 128,
//				165, 175, 167, 175, 92, 121, 92, 170, 177, 169, 139, 162, 128,
//				165, 175, 167, 175, 119, 92, 69, 185, 92, 185, 92 };
//		char[] codeArr = new char[encode.length];
//		for (int i = 0; i < encode.length; i++) {
//			codeArr[i] = (char) (encode[i] - key);
//		}
//		String code = new String(codeArr);
//		System.out.println(code);
//	}
}
